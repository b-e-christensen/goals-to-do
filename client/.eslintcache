[{"C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\index.js":"1","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\App.js":"2","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\pages\\Login.js":"3","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\Header.js":"4","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\pages\\Dashboard.js":"5","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\Footer.js":"6","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\pages\\Signup.js":"7","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\Start.js":"8","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\Navbar.js":"9","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\Goals.js":"10","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\TODO.js":"11","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\utils\\mutations.js":"12","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\utils\\auth.js":"13","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\utils\\queries.js":"14","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\GoalCard.js":"15","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\TODOCard.js":"16","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\StepModal.js":"17"},{"size":270,"mtime":1654136270619,"results":"18","hashOfConfig":"19"},{"size":2146,"mtime":1654136270614,"results":"20","hashOfConfig":"19"},{"size":2509,"mtime":1654136270620,"results":"21","hashOfConfig":"19"},{"size":272,"mtime":1654136270616,"results":"22","hashOfConfig":"19"},{"size":965,"mtime":1654136270620,"results":"23","hashOfConfig":"19"},{"size":202,"mtime":1654136270615,"results":"24","hashOfConfig":"19"},{"size":3557,"mtime":1654136270621,"results":"25","hashOfConfig":"19"},{"size":382,"mtime":1654136270617,"results":"26","hashOfConfig":"19"},{"size":565,"mtime":1654136270616,"results":"27","hashOfConfig":"19"},{"size":3236,"mtime":1654484239073,"results":"28","hashOfConfig":"19"},{"size":2591,"mtime":1654136270618,"results":"29","hashOfConfig":"19"},{"size":1615,"mtime":1654484096434,"results":"30","hashOfConfig":"19"},{"size":1052,"mtime":1654136270625,"results":"31","hashOfConfig":"19"},{"size":375,"mtime":1654136270627,"results":"32","hashOfConfig":"19"},{"size":3886,"mtime":1654484566425,"results":"33","hashOfConfig":"19"},{"size":1620,"mtime":1654136270618,"results":"34","hashOfConfig":"19"},{"size":2134,"mtime":1654136270617,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1ym5k2z",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\index.js",[],["75","76"],"C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\App.js",["77"],"import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// Custom components and page loads \nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Login from './pages/Login'\nimport Signup from './pages/Signup'\nimport Start from './components/Start'\nimport Dashboard from './pages/Dashboard';\n//import Auth from './utils/auth';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\n\nfunction App() {\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Start />}\n              />\n              <Route \n                path=\"/login\" \n                element={<Login />}\n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />}\n              />\n              <Route \n                path=\"/dashboard\" \n                element={<Dashboard />}\n              />\n            </Routes>\n          </div>\n          {/* <Footer /> */}\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\pages\\Login.js",[],"C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\Header.js",[],"C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\pages\\Dashboard.js",[],"C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\Footer.js",[],"C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\pages\\Signup.js",[],"C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\Start.js",[],"C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\Navbar.js",[],"C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\Goals.js",["78","79","80","81","82","83","84","85","86"],"C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\TODO.js",["87"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_TODO } from '../utils/mutations';\nimport TODOCard from './TODOCard';\n\nconst Todo = (props) => {\n  const [formState, setFormState] = useState({ name: '', priority: '' });\n  const [addTodo, { error, data }] = useMutation(ADD_TODO);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    //event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await addTodo({\n        variables: { ...formState },\n      });\n\n      console.log(data);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      name: '',\n      priority: '',\n    });\n  };\n  const options = [\n    'one', 'two', 'three'\n  ];\n  const defaultOption = options[0];\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Create To Do</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success!\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Name of todo\"\n                  name=\"name\"\n                  type=\"text\"\n                  value={formState.todo}\n                  onChange={handleChange}\n                />\n                <label>\n                  Priority\n                  <select value={formState.priority} onChange={handleChange} name=\"priority\" className=\"form-input\">\n                    <option value=\"High\">High</option>\n                    <option value=\"Medium\">Medium</option>\n                    <option value=\"Low\">Low</option>\n                  </select>\n                </label>\n                <button\n                  className=\"btn btn-block btn-info\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n        <TODOCard />\n      </div>\n    </main>\n  );\n};\n\nexport default Todo;\n","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\utils\\mutations.js",[],"C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\utils\\auth.js",[],"C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\utils\\queries.js",[],"C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\GoalCard.js",["88","89","90"],"C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\TODOCard.js",["91"],"import React from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { Container, Card } from 'react-bootstrap';\nimport { GET_USER_ALL } from '../utils/queries'\nimport { UPDATE_TODO, REMOVE_TODO } from '../utils/mutations';\n\nconst TODOCard = (props) => {\n  const [updateTodo] = useMutation(UPDATE_TODO);\n  const [removeTodo] = useMutation(REMOVE_TODO);\n  const { loading, data } = useQuery(GET_USER_ALL);\n  const userInfo = data?.getUser.todos || [];\n  console.log(userInfo)\n\n  return (\n    <Container className='custom-cont-alter'>\n      <h2>\n        {userInfo.length\n          ? `Viewing ${userInfo.length} To Do's:`\n          : 'Create a To Do'}\n      </h2>\n\n      {userInfo.map((todo) => {\n        return (\n          <Card key={todo._id} border='dark' className='custom-card-width'>\n            <Card.Body id={todo._id}>\n              <Card.Title>{todo.name}</Card.Title>\n              <p className='small'>Priority: {todo.priority}</p>\n              {todo.completed ? (<Card.Text>Completed</Card.Text>) : (\n                <Card.Text>Not yet completed</Card.Text>\n              )}\n              \n              <label> Mark as Complete\n                <input type=\"checkbox\" onChange={(e) => { updateTodo({variables: {_id: todo._id, name: todo.name, completed: true, priority: todo.priority}}) }}/>\n              </label>\n              <label> Remove\n                <input type=\"checkbox\" onChange={(e) => { removeTodo({variables: {_id: todo._id}}) }} />\n              </label>\n            </Card.Body>\n          </Card>\n        );\n      })}\n\n    </Container>\n  );\n};\n\nexport default TODOCard;\n","C:\\Users\\monty\\bootcamp\\code\\projects\\goals-to-do\\client\\src\\components\\StepModal.js",["92","93"],"import React, { useRef, useState } from \"react\";\nimport ReactDom from \"react-dom\";\nimport { useMutation } from '@apollo/client';\nimport { ADD_STEP } from '../utils/mutations';\n\nconst StepModal = ({ setShowModal, goalId }) => {\n  // close the modal when clicking outside the modal.\n  const modalRef = useRef();\n  const closeModal = (e) => {\n    if (e.target === modalRef.current) {\n      setShowModal(false);\n    }\n  };\n\n  const [formState, setFormState] = useState({ name: '', goalId: goalId });\n  // const [addStep, { error, data }] = useMutation(ADD_STEP);\n  const [addStep, { error, data }] = useMutation(ADD_STEP);\n\n  console.log(formState)\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await addStep({\n        variables: { ...formState },\n      });\n      console.log(formState);\n      console.log(data);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      name: '',\n    });\n  };\n\n  //render the modal JSX in the portal div.\n  return ReactDom.createPortal(\n    <div className=\"container\" ref={modalRef} onClick={closeModal}>\n      <div className=\"modal display-flex flex-column\">\n        <h5 className='m-3'>Add Step</h5>\n        <form className='w-75' onSubmit={handleFormSubmit}>\n          <input\n            className=\"form-input\"\n            placeholder=\"Name of step\"\n            name=\"name\"\n            type=\"text\"\n            value={formState.name}\n            onChange={handleChange}\n          />\n          <button\n            className=\"btn btn-block btn-info\"\n            style={{ cursor: 'pointer' }}\n            type=\"submit\"\n          >\n            Submit\n          </button>\n        </form>\n        <button className='modal-button w-25' onClick={() => setShowModal(false)}>X</button>\n      </div>\n    </div>,\n    document.getElementById(\"portal\")\n  );\n};\n\nexport default StepModal;",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":12,"column":8,"nodeType":"100","messageId":"101","endLine":12,"endColumn":14},{"ruleId":"98","severity":1,"message":"102","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"103","line":3,"column":23,"nodeType":"100","messageId":"101","endLine":3,"endColumn":31},{"ruleId":"98","severity":1,"message":"104","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":22},{"ruleId":"98","severity":1,"message":"105","line":6,"column":10,"nodeType":"100","messageId":"101","endLine":6,"endColumn":19},{"ruleId":"98","severity":1,"message":"106","line":6,"column":21,"nodeType":"100","messageId":"101","endLine":6,"endColumn":30},{"ruleId":"98","severity":1,"message":"107","line":6,"column":32,"nodeType":"100","messageId":"101","endLine":6,"endColumn":35},{"ruleId":"98","severity":1,"message":"108","line":6,"column":37,"nodeType":"100","messageId":"101","endLine":6,"endColumn":41},{"ruleId":"98","severity":1,"message":"109","line":6,"column":43,"nodeType":"100","messageId":"101","endLine":6,"endColumn":49},{"ruleId":"98","severity":1,"message":"110","line":6,"column":51,"nodeType":"100","messageId":"101","endLine":6,"endColumn":55},{"ruleId":"98","severity":1,"message":"111","line":43,"column":9,"nodeType":"100","messageId":"101","endLine":43,"endColumn":22},{"ruleId":"98","severity":1,"message":"112","line":9,"column":11,"nodeType":"100","messageId":"101","endLine":9,"endColumn":18},{"ruleId":"98","severity":1,"message":"113","line":12,"column":21,"nodeType":"100","messageId":"101","endLine":12,"endColumn":33},{"ruleId":"114","severity":1,"message":"115","line":51,"column":17,"nodeType":"116","endLine":56,"endColumn":18},{"ruleId":"98","severity":1,"message":"112","line":10,"column":11,"nodeType":"100","messageId":"101","endLine":10,"endColumn":18},{"ruleId":"98","severity":1,"message":"117","line":17,"column":21,"nodeType":"100","messageId":"101","endLine":17,"endColumn":26},{"ruleId":"98","severity":1,"message":"118","line":17,"column":28,"nodeType":"100","messageId":"101","endLine":17,"endColumn":32},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useQuery' is defined but never used.","'GET_USER_ALL' is defined but never used.","'Jumbotron' is defined but never used.","'Container' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'defaultOption' is assigned a value but never used.","'loading' is assigned a value but never used.","'setUserState' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'error' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]